#!/usr/bin/env python

import h5py
from argparse import ArgumentParser
import numpy as np
import sklearn.datasets

# books dvd eletronics kitchen

root_dataset = "data-Amazon/"

# We create the parser
arg_parser = ArgumentParser(description="generate the amazon review dataset")
arg_parser.add_argument(
    "path", metavar="path", type=str,
    help="path of the h5 dataset file"
)
arg_parser.add_argument(
    "source", metavar="source", type=str,
    help="data source (either books, dvd, eletronics or kitchen)"
)
arg_parser.add_argument(
    "target", metavar="target", type=str,
    help="data target (either books, dvd, eletronics or kitchen)"
)
arg_parser.add_argument(
    "proportion_stopping", metavar="proportion_stopping", type=float,
    help='proportion of the stopping set'
)
arg_list = arg_parser.parse_args()


source = arg_list.source
target = arg_list.target
proportion_stopping = arg_list.proportion_stopping
dataset_path = arg_list.path


def preprocess_example(example):
    example = example.astype(np.float32)
    return example


def preprocess_label(label):
    label = label.astype(np.float32)
    label = np.expand_dims(label, axis=1)
    return label


data_type = root_dataset + source + "." + target
data = sklearn.datasets.load_svmlight_files([
    data_type + "_source.svmlight",
    data_type + "_target.svmlight",
    data_type + "_test.svmlight"
])

example_prior = preprocess_example(data[0].toarray())
label_prior = preprocess_label(data[1])
example_posterior = preprocess_example(data[2].toarray())
label_posterior = preprocess_label(data[3])
example_test = preprocess_example(data[4].toarray())
label_test = preprocess_label(data[5])

example_stopping = example_prior[
    int(proportion_stopping*len(example_prior)):]
example_prior = example_prior[
    :int(proportion_stopping*len(example_prior))]
label_stopping = label_prior[
    int(proportion_stopping*len(label_prior)):]
label_prior = label_prior[
    :int(proportion_stopping*len(label_prior))]

dataset_file = h5py.File(dataset_path, "w")

print(example_posterior.shape)

dataset_file["example_prior"] = example_prior
dataset_file["label_prior"] = label_prior
dataset_file["example_posterior"] = example_posterior
dataset_file["label_posterior"] = label_posterior
if(proportion_stopping != 0.0):
    dataset_file["example_stopping"] = example_stopping
    dataset_file["label_stopping"] = label_stopping

dataset_file["example_test"] = example_test
dataset_file["label_test"] = label_test
